name: Build and Upload Dev Release
on:
  #  push:
  #    branches:
  #      - master
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  get-props:
    name: Get Props
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.get-version.outputs.version }}
      hash: ${{ steps.get-hash.outputs.hash }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Get Version
        id: get-version
        run: echo "version=$(grep -oE '<Version>[^<]+' src/Avayomi/Avayomi.csproj | sed 's/<Version>//')-dev.${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Get Hash
        id: get-hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: get-props
    permissions:
      contents: write
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          delete_release: true
          tag_name: dev-build
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2
        with:
          name: Dev ${{ needs.get-props.outputs.hash }}-${{ needs.get-props.outputs.version }}
          tag_name: dev-build
          prerelease: true
  build:
    name: Build Avayomi
    needs: [ get-props, create-release ]
    strategy:
      fail-fast: true
      matrix:
        target-platform:
          - windows
          - linux
        target-arch:
          - x64
        include:
          - target-platform: windows
            os: windows-latest
            channel: win-x64-dev
          - target-platform: linux
            os: ubuntu-latest
            channel: linux-x64-dev
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      NUGET_CERT_REVOCATION_MODE: offline
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Check Cache
        id: check-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/toolResolverCache
            ${{ github.workspace }}/.config
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install FUSE
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2
      - name: Install Velopack
        if: ${{ steps.check-cache.outputs.cache-hit == false }}
        run: |
          dotnet new tool-manifest
          dotnet tool install vpk
      - name: Restore
        if: ${{ steps.check-cache.outputs.cache-hit == false }}
        run: dotnet restore
      - name: Publish
        run: dotnet publish src/Avayomi/Avayomi.csproj -c Release -o publish -p:Version=${{ needs.get-props.outputs.version }}
      - name: Pack Release
        shell: bash
        run: >
          dotnet vpk pack 
          -u Avayomi 
          -v ${{ needs.get-props.outputs.version }} 
          -p publish 
          -o release
          -c ${{ matrix.channel }} 
          ${{ matrix.target-platform == 'linux' && '-i src/Avayomi/Assets/faviconlogo.png' || '' }}
      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev-build
          files: |
            releases/
            !releases/assets.*.json
            !releases/RELEASES-*